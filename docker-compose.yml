version: "3.8"

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GIN_MODE=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=goasync
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSLMODE=disable
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goasync-network
    restart: unless-stopped

  postgres:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: goasync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/postgres/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - goasync-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d goasync"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@goasync.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goasync-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  goasync-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
